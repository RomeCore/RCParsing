import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a,b as i,e as s,w as l,d as n,r as d,o as u}from"./app-CbSd3rvu.js";const p={};function g(c,e){const r=d("RouteLink");return u(),o("div",null,[e[3]||(e[3]=a('<h1 id="rcparsing-tutorials-overview" tabindex="-1"><a class="header-anchor" href="#rcparsing-tutorials-overview"><span>RCParsing Tutorials Overview</span></a></h1><p>Welcome to the tutorials for <strong>RCParsing</strong>, a powerful lexerless parsing library designed for creating efficient and flexible parsers in C#. These tutorials provide a comprehensive guide to understanding and using the library&#39;s core features, from building basic rules and tokens to handling advanced parsing scenarios like indentation-based syntax.</p><h2 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started"><span>Getting Started</span></a></h2><p>This section covers the fundamental concepts and components of <code>RCParsing</code>. Whether you&#39;re new to parsing or an experienced developer, these tutorials will help you leverage the library&#39;s capabilities to build robust parsers tailored to your needs.</p><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents"><span>Table of Contents</span></a></h2>',5)),i("ul",null,[e[2]||(e[2]=a('<li><a href="main-concepts">Main Concepts</a><ul><li>Learn about <strong>Tokens</strong>, <strong>Rules</strong>, and <strong>Barrier Tokens</strong>, the core building blocks of the <code>RCParsing</code> library.</li></ul></li><li><a href="rule-and-token-building">Rule and Token Building</a><ul><li>Understand how to create and combine rules and tokens using <code>ParserBuilder</code> to define your grammar.</li></ul></li><li><a href="auto-skipping">Auto-skipping</a><ul><li>Explore how to configure skip-rules and manage whitespace requirements in your grammar.</li></ul></li><li><a href="deduplication">Deduplication</a><ul><li>Discover how <code>RCParsing</code> optimizes your parser by deduplicating rules and tokens.</li></ul></li><li><a href="transformation-and-intermediate-values">Transformation and Intermediate Values</a><ul><li>Learn how to transform parsed data into structured output using intermediate values and transformation functions.</li></ul></li><li><a href="settings-and-their-override-modes">Settings and Their Override Modes</a><ul><li>Dive into configuring parser and rule behavior with settings and inheritance modes.</li></ul></li><li><a href="barrier-tokens">Barrier Tokens</a><ul><li>Master parsing complex, context-sensitive syntax like Python-style indentation using barrier tokens.</li></ul></li><li><a href="initialization-flags-debugging-and-performance">Initialization Flags, Debugging, and Performance</a><ul><li>Optimize your parser with initialization flags and debug effectively with detailed error reporting.</li></ul></li>',8)),i("li",null,[s(r,{to:"/elements_library/"},{default:l(()=>[...e[0]||(e[0]=[n("Elements Library",-1)])]),_:1}),e[1]||(e[1]=i("ul",null,[i("li",null,[n("Explore the full range of rule types and token patterns available in "),i("code",null,"RCParsing"),n(".")])],-1))])]),e[4]||(e[4]=a('<h2 id="next-steps" tabindex="-1"><a class="header-anchor" href="#next-steps"><span>Next Steps</span></a></h2><p>Start with the <a href="main-concepts">Main Concepts</a> to grasp the foundational elements of <code>RCParsing</code>. Then, explore specific topics based on your parsing needs, such as handling whitespace with <a href="auto-skipping">Auto-skipping</a> or building complex grammars with <a href="rule-and-token-building">Rule and Token Building</a>.</p><p>Happy parsing!</p>',3))])}const f=t(p,[["render",g]]),b=JSON.parse('{"path":"/guide/","title":"Overview","lang":"en-US","frontmatter":{"title":"Overview"},"git":{"createdTime":1758729324000,"updatedTime":1760390143000,"contributors":[{"name":"RomeCore","username":"RomeCore","email":"62770895+RomeCore@users.noreply.github.com","commits":2,"url":"https://github.com/RomeCore"}]},"readingTime":{"minutes":1.08,"words":325},"filePathRelative":"guide/README.md"}');export{f as comp,b as data};
